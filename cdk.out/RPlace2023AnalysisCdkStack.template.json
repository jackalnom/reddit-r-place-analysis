{
 "Resources": {
  "glueroleid23238EBB2881": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "glue.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSGlueServiceRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/glue_role_id2323/Resource"
   }
  },
  "glueroleid2323DefaultPolicy615B6686": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "redditdatabucket3658BFEB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "redditdatabucket3658BFEB",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "glueroleid2323DefaultPolicy615B6686",
    "Roles": [
     {
      "Ref": "glueroleid23238EBB2881"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/glue_role_id2323/DefaultPolicy/Resource"
   }
  },
  "redditdatabucket3658BFEB": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:assets/:d5745b58",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/reddit-data-bucket/Resource"
   }
  },
  "redditdatabucketPolicy1F1DA0C1": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "redditdatabucket3658BFEB"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "redditdatabucket3658BFEB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "redditdatabucket3658BFEB",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/reddit-data-bucket/Policy/Resource"
   }
  },
  "redditdatabucketAutoDeleteObjectsCustomResource1302C79C": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "redditdatabucket3658BFEB"
    }
   },
   "DependsOn": [
    "redditdatabucketPolicy1F1DA0C1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/reddit-data-bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "redditdatabucket3658BFEB"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "deploymentAwsCliLayer437C1CEF": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/deployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "deploymentCustomResourceEDB139B7": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "7c8426cbb04e42b8f82962b41aa2e1c53f9e62a9cf93ed3e1b877815d7bee5b6.zip"
    ],
    "DestinationBucketName": {
     "Ref": "redditdatabucket3658BFEB"
    },
    "DestinationBucketKeyPrefix": "assets/",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/deployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "redditdatabucket3658BFEB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "redditdatabucket3658BFEB",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e976a796f036a5efbf44b99e44cfb5a961df08d8dbf7cd37e60bf216fb982a00.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "deploymentAwsCliLayer437C1CEF"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.e976a796f036a5efbf44b99e44cfb5a961df08d8dbf7cd37e60bf216fb982a00",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "rplaceetlworkflow": {
   "Type": "AWS::Glue::Workflow",
   "Properties": {
    "Description": "Workflow to process the ETL for r/place.",
    "Name": "r_place_etl_workflow"
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/r_place_etl_workflow"
   }
  },
  "downloadrplacecsvsjob": {
   "Type": "AWS::Glue::Job",
   "Properties": {
    "Command": {
     "Name": "pythonshell",
     "PythonVersion": "3.9",
     "ScriptLocation": {
      "Fn::Join": [
       "",
       [
        "s3://",
        {
         "Ref": "redditdatabucket3658BFEB"
        },
        "/assets/download_r_place_csvs.py"
       ]
      ]
     }
    },
    "DefaultArguments": {
     "--bucket": {
      "Ref": "redditdatabucket3658BFEB"
     }
    },
    "GlueVersion": "3.0",
    "MaxCapacity": 1,
    "Name": "download_r_place_csvs_job",
    "Role": {
     "Fn::GetAtt": [
      "glueroleid23238EBB2881",
      "Arn"
     ]
    },
    "Timeout": 3
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/download_r_place_csvs_job"
   }
  },
  "processcsvstoparquetjob": {
   "Type": "AWS::Glue::Job",
   "Properties": {
    "Command": {
     "Name": "glueetl",
     "PythonVersion": "3",
     "ScriptLocation": {
      "Fn::Join": [
       "",
       [
        "s3://",
        {
         "Ref": "redditdatabucket3658BFEB"
        },
        "/assets/process_csvs_to_parquet.py"
       ]
      ]
     }
    },
    "DefaultArguments": {
     "--bucket": {
      "Ref": "redditdatabucket3658BFEB"
     }
    },
    "GlueVersion": "4.0",
    "Name": "process_csvs_to_parquet_job",
    "NumberOfWorkers": 10,
    "Role": {
     "Fn::GetAtt": [
      "glueroleid23238EBB2881",
      "Arn"
     ]
    },
    "Timeout": 60,
    "WorkerType": "G.1X"
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/process_csvs_to_parquet_job"
   }
  },
  "starttrigger": {
   "Type": "AWS::Glue::Trigger",
   "Properties": {
    "Actions": [
     {
      "JobName": "download_r_place_csvs_job"
     }
    ],
    "Name": "start_trigger",
    "Type": "ON_DEMAND",
    "WorkflowName": "r_place_etl_workflow"
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/start_trigger"
   }
  },
  "downloadfinishedtrigger": {
   "Type": "AWS::Glue::Trigger",
   "Properties": {
    "Actions": [
     {
      "JobName": "process_csvs_to_parquet_job"
     }
    ],
    "Name": "download_finished_trigger",
    "Predicate": {
     "Conditions": [
      {
       "JobName": "download_r_place_csvs_job",
       "LogicalOperator": "EQUALS",
       "State": "SUCCEEDED"
      }
     ]
    },
    "StartOnCreation": true,
    "Type": "CONDITIONAL",
    "WorkflowName": "r_place_etl_workflow"
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/download_finished_trigger"
   }
  },
  "rplacedb": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseInput": {
     "Description": "Database for rplace data.",
     "Name": "r_place_db"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/r_place_db"
   }
  },
  "rplacecrawler": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "DatabaseName": "r_place_db",
    "Name": "r_place_crawler",
    "Role": {
     "Fn::GetAtt": [
      "glueroleid23238EBB2881",
      "Arn"
     ]
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          "s3://",
          {
           "Ref": "redditdatabucket3658BFEB"
          },
          "/processed/"
         ]
        ]
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/r_place_crawler"
   }
  },
  "parquetfinishedtrigger": {
   "Type": "AWS::Glue::Trigger",
   "Properties": {
    "Actions": [
     {
      "CrawlerName": "r_place_crawler"
     }
    ],
    "Name": "parquet_finished_trigger",
    "Predicate": {
     "Conditions": [
      {
       "JobName": "process_csvs_to_parquet_job",
       "LogicalOperator": "EQUALS",
       "State": "SUCCEEDED"
      }
     ]
    },
    "StartOnCreation": true,
    "Type": "CONDITIONAL",
    "WorkflowName": "r_place_etl_workflow"
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/parquet_finished_trigger"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21QTU/DMAz9LbungW5C4rp14oA4VB2CY5WmXjFNY5SkVFXU/07SjE1InN6H7cTPW55vH/n9Rkw2k22fKWy4Pzkhexas2qMYuK9IASvOesWSFMo5ysQWZnfcH0bZg4vuhSW4Nf/RSRyEhThd+xa+FM0DaMdT6Xg1mLAWnOX7CAtTYmhawX148UXMYN7AWCTNTqg7BY7006ili86VhNZfvrBOjbBOv5Ppz4qmWH6mJsKrwa4DE+lRONGE9SIvjJgUmGVhFVgajQzuaB0NNxlO83+pNPSNLZgYla0Rwm27sOslSK1iiDqcWirk+8kWCtdc68ekW0xrl7P7IH2343nOHzafFjEzo3Y4AK8S/gDhTVggyQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "RPlace2023AnalysisCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}